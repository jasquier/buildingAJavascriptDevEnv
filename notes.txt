Setting up a JavaScript development environment!!
Options -> Decision -> Implementation
Inception -> Shoe Horning -> Integration
Editors
Spaces vs tabs, line endings
editorconfig?
integrated terminal!
recommends webstorm but uses vs code in the course
Web Server = Express
Do a TypeScript course
Look into Elm
Browsers dont understand CommonJS
What module format should you choose?
  There are five...
  IIFE, Async Module Definition, Common JS, Universal Module Definition, and ES6 Modules
Nodes you can continue to use common JS
But we use es6 modules now and in future dev should as well
ES6 aka ES2015, all new versions will be named after release year
Early bundler was browserify
Webpack is popular now
Webpack includes a development server
Look into rollup as a webpack bundling alternative
A new bundler JSPM also uses rollup
Why choose webpack?
  Bundles and generates more than js like css and fonts
  Comes with dev web server
  Allows bundle splitting
  Hot module reloading
  Webpack 2 has tree shaking
We can use webpack for more environments than just the web
Look into using polyfill.io's cdn
Learn JSON server and JSON Schema Faker
JSON Schema faker is gonna be awesome for max length chars and min length
faker.js chance.js and randexp.js
Steps to mock an api
  Declare our schema, what does the service layer provide / require?
  Generate random data
  Server data via our mock api
JSON Schema fake io for testing you schema
Recommends a demo app to demonstrate using your js dev env
Dont' generate code, instead generate JSON / other configs and have your code use that server data.
Learn more about source maps and implement them in the DMP
WE NEED! the flexibility to switch between production and mock data in the development environment
